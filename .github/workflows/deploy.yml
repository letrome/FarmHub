name: Deploy

on:
  push:
    branches: [ "farm" ]
  pull_request:
    branches: [ "farm" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v4

      # Common dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '21'

      - name: Install newman
        run: npm install -g newman

      - name: Get IP address
        id: get_ip
        run: echo "ip_address=$(hostname -I | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      ###################################################

      # Dependencies
      ## Species
      - name: Install Express.js
        run: npm install express

      ## Animals
      - name: Install Composer
        run: |
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          php composer-setup.php --install-dir=/usr/local/bin --filename=composer
          php -r "unlink('composer-setup.php');"

      - name: Install Slim
        run: composer require slim/slim:^4.0 slim/psr7:^1.5 --working-dir animals

      ## Pictures
      - name: Setup Go environment
        uses: actions/setup-go@v5.0.1
        with:
          go-version: '>=1.17.0'
          check-latest: true

      - name: Install Go libraries
        run: cd pictures && go mod tidy

      - name: Build
        run: |
          cd pictures
          go build .

      ## Farmers
      - name: Setup up python environment
        uses: actions/setup-python@v5
        with:
          python-version: ''

      - name: Install dependencies
        run: |
          cd farmers
          pip install -r requirements.txt

      ## Farm
      - name: Setup java environment
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21-ea'

      - name: Install dependencies
        run: |
          cd farm
          mvn clean compile


      ###################################################

      # Integration tests
      - name: Run integration tests
        run: integration-tests/run.sh

      ###################################################

      # Stop & start stack
      ## Species
      - name: Stop previous service species
        if: success()
        run: |
          has_process=$(sudo netstat -tlnp | grep ':3000' | wc -l)
          if [ $has_process -ne 0 ]; then
            pid=$(sudo lsof -t -i:3000)
            sudo kill $pid
          else
            echo "No running instance to kill"
          fi

      - name: Start new service species
        run: nohup node species/server.js > ../nohup.out 2> ../nohup.err < /dev/null &

      ## Animals
      - name: Stop previous service animals
        if: success()
        run: |
          has_process=$(sudo netstat -tlnp | grep ':4000' | wc -l)
          if [ $has_process -ne 0 ]; then
            pid=$(sudo lsof -t -i:4000)
            sudo kill $pid
          else
            echo "No running instance to kill"
          fi

      - name: Start new service animals
        run: |
          IP_ADDRESS="${{ steps.get_ip.outputs.ip_address }}"
          nohup php -S $IP_ADDRESS:4000 -t animals/public > ../nohup.out 2> ../nohup.err < /dev/null &

      ## Pictures
      - name: Stop previous service pictures
        if: success()
        run: |
          has_process=$(sudo netstat -tlnp | grep ':5000' | wc -l)
          if [ $has_process -ne 0 ]; then
            pid=$(sudo lsof -t -i:5000)
            sudo kill $pid
          else
            echo "No running instance to kill"
          fi

      - name: Start new service pictures
        run: |
          IP_ADDRESS="${{ steps.get_ip.outputs.ip_address }}"
          cd pictures || exit
          nohup ./farmhub $IP_ADDRESS:5000 > ../nohup.out 2> ../nohup.err < /dev/null &

      ## Farmers
      - name: Stop previous service farmers
        if: success()
        run: |
          has_process=$(sudo netstat -tlnp | grep ':6000' | wc -l)
          if [ $has_process -ne 0 ]; then
            pid=$(sudo lsof -t -i:6000)
            sudo kill $pid
          else
            echo "No running instance to kill"
          fi

      - name: Start new service farmers
        run: |
          IP_ADDRESS="${{ steps.get_ip.outputs.ip_address }}"
          cd farmers || exit
          nohup python main.py --host=$IP_ADDRESS --port=6000 > ../nohup.out 2> ../nohup.err < /dev/null &

      ## Farm
      - name: Stop previous service farm
        if: success()
        run: |
          has_process=$(sudo netstat -tlnp | grep ':7000' | wc -l)
          if [ $has_process -ne 0 ]; then
            pid=$(sudo lsof -t -i:7000)
            sudo kill $pid
          else
            echo "No running instance to kill"
          fi

      - name: Start new service farm
        run: |
          cd farm || exit
          nohup mvn spring-boot:run > ../nohup.out 2> ../nohup.err < /dev/null &