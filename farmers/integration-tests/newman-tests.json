{
	"info": {
		"_postman_id": "9a122e4d-628e-4659-8769-82b17c96c9cc",
		"name": "Integration testing",
		"description": "Integration tests of the project FarmHub. It contains integration tests for the services:\n\n- Species\n- Animals\n    \n\nYou can run them directly from this project:\n\n- \"Run collection\" to launch all the integration tests\n- \"Run folder\" to launch integration tests of a specific service\n    \n\nAlternatively, you can execute them from the FarmHub code repository. From the root of the project, given a specific service `$SERVICE`:\n\n``` bash\n$SERVICE/integration-tests/run.sh\n\n ```",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7556688",
		"_collection_link": "https://www.postman.com/letrome/workspace/farmhub/collection/7556688-9a122e4d-628e-4659-8769-82b17c96c9cc?action=share&source=collection_link&creator=7556688"
	},
	"item": [
		{
			"name": "Farmers",
			"item": [
				{
					"name": "List all",
					"item": [
						{
							"name": "List all farmers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"",
											"// Tests",
											" pm.test(\"Check that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Number of entries is 4\", () => {",
											"  pm.expect(responseJson).to.have.lengthOf(4);",
											"});",
											"",
											"responseJson.forEach((entry, index) => {",
											"  pm.test(`Entry ${index + 1} has all required fields and non-empty values`, () => {",
											"    pm.expect(entry).to.have.property(\"id\").and.to.be.a(\"string\").and.to.not.be.empty;",
											"    pm.expect(entry).to.have.property(\"first_name\").and.to.be.a(\"string\").and.to.not.be.empty;",
											"    pm.expect(entry).to.have.property(\"last_name\").and.to.be.a(\"string\").and.to.not.be.empty;",
											"    pm.expect(entry).to.have.property(\"birth_date\").and.to.be.a(\"string\").and.to.not.be.empty;",
											"    pm.expect(entry).to.have.property(\"specialties\").and.to.be.an(\"array\").and.to.not.be.empty;",
											"    pm.expect(entry).to.have.property(\"picture\").and.to.be.a(\"string\").and.to.not.be.empty;",
											"    pm.expect(entry).to.have.property(\"status\").and.to.be.a(\"string\").and.to.not.be.empty;",
											"  });",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{farmers_url}}/farmers",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"farmers"
									]
								},
								"description": "List all farmers"
							},
							"response": []
						}
					],
					"description": "**Execute** list all farmers\n\n**Return** all farmers"
				},
				{
					"name": "Get existing farmer",
					"item": [
						{
							"name": "Get a farmer by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"",
											"// Tests",
											" pm.test(\"Check that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that id is correct\", function () {",
											"    const id = \"farmer1\";",
											"    pm.expect(responseJson.id).to.eql(id);",
											"});",
											"",
											"pm.test(\"Verify that first_name is correct\", function () {",
											"    const first_name = \"Alice\";",
											"    pm.expect(responseJson.first_name).to.eql(first_name);",
											"});",
											"",
											"pm.test(\"Verify that last_name is correct\", function () {",
											"    const last_name = \"Cooper\";",
											"    pm.expect(responseJson.last_name).to.eql(last_name);",
											"});",
											"",
											"pm.test(\"Verify that birth_date is correct\", function () {",
											"    const birth_date = \"1948-02-04\";",
											"    pm.expect(responseJson.birth_date).to.eql(birth_date);",
											"});",
											"",
											"pm.test(\"Verify that specialties is correct\", function () {",
											"    const specialties = [",
											"            \"Cow\",",
											"            \"Sheep\",",
											"            \"Pig\"",
											"        ];",
											"    pm.expect(responseJson.specialties).to.eql(specialties);",
											"});",
											"",
											"pm.test(\"Verify that picture is correct\", function () {",
											"    const picture = \"picture25\";",
											"    pm.expect(responseJson.picture).to.eql(picture);",
											"});",
											"",
											"pm.test(\"Verify that status is correct\", function () {",
											"    const status = \"gone\";",
											"    pm.expect(responseJson.status).to.eql(status);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{farmers_url}}/farmers/farmer1",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"farmers",
										"farmer1"
									]
								},
								"description": "Get a farmer by id"
							},
							"response": [
								{
									"name": "Get picture1",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:5000/pictures/picture1",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "5000",
											"path": [
												"pictures",
												"picture1"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:11:03 GMT"
										},
										{
											"key": "Content-Length",
											"value": "104"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture1\",\"name\":\"picture of Marguerite\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture1.png\"}\n"
								},
								{
									"name": "Get picture2",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture2",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture2"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:11:03 GMT"
										},
										{
											"key": "Content-Length",
											"value": "104"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture2\",\"name\":\"picture of Clarabelle\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture2.png\"}"
								},
								{
									"name": "Get picture3",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture3",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture3"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:11:03 GMT"
										},
										{
											"key": "Content-Length",
											"value": "104"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture3\",\"name\":\"picture of Bessie\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture3.png\"}"
								},
								{
									"name": "Get picture4",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture4",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture4"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:11:03 GMT"
										},
										{
											"key": "Content-Length",
											"value": "104"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture4\",\"name\":\"picture of La vache qui rit\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture4.png\"}"
								},
								{
									"name": "Get picture5",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture5",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture5"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:14:23 GMT"
										},
										{
											"key": "Content-Length",
											"value": "105"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture5\",\"name\":\"picture of Chicken Run\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture5.png\"}\n"
								},
								{
									"name": "Get picture6",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture6",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture6"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:14:36 GMT"
										},
										{
											"key": "Content-Length",
											"value": "108"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture6\",\"name\":\"picture of Chicken Little\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture6.png\"}\n"
								},
								{
									"name": "Get picture7",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture7",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture7"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:14:56 GMT"
										},
										{
											"key": "Content-Length",
											"value": "100"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture7\",\"name\":\"picture of Footix\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture7.png\"}\n"
								},
								{
									"name": "Get picture8",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture8",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture8"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:15:14 GMT"
										},
										{
											"key": "Content-Length",
											"value": "101"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture8\",\"name\":\"picture of Monique\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture8.png\"}\n"
								},
								{
									"name": "Get picture9",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture9",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture9"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:15:27 GMT"
										},
										{
											"key": "Content-Length",
											"value": "99"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture9\",\"name\":\"picture of Dolly\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture9.png\"}\n"
								},
								{
									"name": "Get picture10",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture10",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture10"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:15:39 GMT"
										},
										{
											"key": "Content-Length",
											"value": "101"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture10\",\"name\":\"picture of Shaun\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture10.png\"}\n"
								},
								{
									"name": "Get picture11",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture11",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture11"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:15:55 GMT"
										},
										{
											"key": "Content-Length",
											"value": "101"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture11\",\"name\":\"picture of Shrek\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture11.png\"}\n"
								},
								{
									"name": "Get picture12",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture12",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture12"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:16:08 GMT"
										},
										{
											"key": "Content-Length",
											"value": "102"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture12\",\"name\":\"picture of Wooloo\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture12.png\"}\n"
								},
								{
									"name": "Get picture13",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture13",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture13"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:16:22 GMT"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture13\",\"name\":\"picture of Tornado\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture13.png\"}\n"
								},
								{
									"name": "Get picture14",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture14",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture14"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:16:38 GMT"
										},
										{
											"key": "Content-Length",
											"value": "108"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture14\",\"name\":\"picture of Jolly Jumper\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture14.png\"}\n"
								},
								{
									"name": "Get picture15",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture15",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture15"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:16:55 GMT"
										},
										{
											"key": "Content-Length",
											"value": "101"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture15\",\"name\":\"picture of Epona\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture15.png\"}\n"
								},
								{
									"name": "Get picture16",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture16",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture16"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:17:07 GMT"
										},
										{
											"key": "Content-Length",
											"value": "110"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture16\",\"name\":\"picture of My little Pony\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture16.png\"}\n"
								},
								{
									"name": "Get picture17",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture17",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture17"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:17:19 GMT"
										},
										{
											"key": "Content-Length",
											"value": "100"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture17\",\"name\":\"picture of Babe\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture17.png\"}\n"
								},
								{
									"name": "Get picture18",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture18",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture18"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:17:30 GMT"
										},
										{
											"key": "Content-Length",
											"value": "106"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture18\",\"name\":\"picture of Spider-Ham\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture18.png\"}\n"
								},
								{
									"name": "Get picture19",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture19",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture19"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:17:43 GMT"
										},
										{
											"key": "Content-Length",
											"value": "103"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture19\",\"name\":\"picture of Naf-Naf\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture19.png\"}\n"
								},
								{
									"name": "Get picture20",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture20",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture20"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:17:55 GMT"
										},
										{
											"key": "Content-Length",
											"value": "105"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture20\",\"name\":\"picture of Peppa Pig\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture20.png\"}\n"
								},
								{
									"name": "Get picture21",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture21",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture21"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:18:08 GMT"
										},
										{
											"key": "Content-Length",
											"value": "104"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture21\",\"name\":\"picture of Gédéon\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture21.png\"}\n"
								},
								{
									"name": "Get picture22",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture22",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture22"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:18:16 GMT"
										},
										{
											"key": "Content-Length",
											"value": "104"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture22\",\"name\":\"picture of Saturnin\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture22.png\"}\n"
								},
								{
									"name": "Get picture23",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture23",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture23"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:18:25 GMT"
										},
										{
											"key": "Content-Length",
											"value": "102"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture23\",\"name\":\"picture of Donald\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture23.png\"}\n"
								},
								{
									"name": "Get picture24",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture24",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture24"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:18:36 GMT"
										},
										{
											"key": "Content-Length",
											"value": "102"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"picture24\",\"name\":\"picture of Howard\",\"type\":\"Animal\",\"url\":\"/pictures/animals/picture24.png\"}\n"
								},
								{
									"name": "Get picture25",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture25",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture25"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:18:48 GMT"
										},
										{
											"key": "Content-Length",
											"value": "18"
										}
									],
									"cookie": [],
									"body": "Picture not found\n"
								},
								{
									"name": "Get picture26",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture26",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture26"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:18:57 GMT"
										},
										{
											"key": "Content-Length",
											"value": "18"
										}
									],
									"cookie": [],
									"body": "Picture not found\n"
								},
								{
									"name": "Get picture27",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture27",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture27"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:19:07 GMT"
										},
										{
											"key": "Content-Length",
											"value": "18"
										}
									],
									"cookie": [],
									"body": "Picture not found\n"
								},
								{
									"name": "Get picture28",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{pictures_url}}/pictures/picture28",
											"host": [
												"{{pictures_url}}"
											],
											"path": [
												"pictures",
												"picture28"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Date",
											"value": "Tue, 14 May 2024 07:19:18 GMT"
										},
										{
											"key": "Content-Length",
											"value": "18"
										}
									],
									"cookie": [],
									"body": "Picture not found\n"
								}
							]
						}
					],
					"description": "**Execute** get an existing farmer by its id\n\n**Return** the requested farmer"
				},
				{
					"name": "Get non-existing farmer",
					"item": [
						{
							"name": "Get a farmer by id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"",
											"// Tests",
											" pm.test(\"Check that status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Verify the content of the response\", function () {",
											"\t\tconst errorMessage = \"Farmer not found\";",
											"\t\tpm.expect(responseJson.error).to.eql(errorMessage);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{farmers_url}}/farmers/farmer0",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"farmers",
										"farmer0"
									]
								},
								"description": "Get a farmer by id"
							},
							"response": []
						}
					],
					"description": "**Execute** get a non-existing farmer by its id\n\n**Return** an error 404"
				},
				{
					"name": "Create and get a farmer",
					"item": [
						{
							"name": "Create a farmer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"pm.collectionVariables.set(\"farmer_id\", responseJson.id);",
											"",
											"// Tests",
											" pm.test(\"Check that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that id is correct\", function () {",
											"    const id = \"farmer5\";",
											"    pm.expect(responseJson.id).to.eql(id);",
											"});",
											"",
											"pm.test(\"Verify that first_name is correct\", function () {",
											"    const first_name = \"José\";",
											"    pm.expect(responseJson.first_name).to.eql(first_name);",
											"});",
											"",
											"pm.test(\"Verify that last_name is correct\", function () {",
											"    const last_name = \"Bové\";",
											"    pm.expect(responseJson.last_name).to.eql(last_name);",
											"});",
											"",
											"pm.test(\"Verify that birth_date is correct\", function () {",
											"    const birth_date = \"1953-06-11\";",
											"    pm.expect(responseJson.birth_date).to.eql(birth_date);",
											"});",
											"",
											"pm.test(\"Verify that specialties is correct\", function () {",
											"    const specialties = [",
											"            \"Cow\",",
											"            \"Sheep\",",
											"            \"Pig\"",
											"        ];",
											"    pm.expect(responseJson.specialties).to.eql(specialties);",
											"});",
											"",
											"pm.test(\"Verify that picture is correct\", function () {",
											"    const picture = \"picture29\";",
											"    pm.expect(responseJson.picture).to.eql(picture);",
											"});",
											"",
											"pm.test(\"Verify that status is correct\", function () {",
											"    const status = \"present\";",
											"    pm.expect(responseJson.status).to.eql(status);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\": \"José\",\n\t\"last_name\": \"Bové\",\n\t\"birth_date\": \"1953-06-11\",\n\t\"specialties\": [\n\t\t\"Cow\",\n\t\t\"Sheep\",\n\t\t\"Pig\"\n\t],\n\t\"picture\": \"picture29\",\n\t\"status\": \"present\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{farmers_url}}/farmers",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"farmers"
									]
								},
								"description": "Create a farmer"
							},
							"response": []
						},
						{
							"name": "Get a farmer by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"",
											"// Tests",
											" pm.test(\"Check that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that id is correct\", function () {",
											"    const id = \"farmer5\";",
											"    pm.expect(responseJson.id).to.eql(id);",
											"});",
											"",
											"pm.test(\"Verify that first_name is correct\", function () {",
											"    const first_name = \"José\";",
											"    pm.expect(responseJson.first_name).to.eql(first_name);",
											"});",
											"",
											"pm.test(\"Verify that last_name is correct\", function () {",
											"    const last_name = \"Bové\";",
											"    pm.expect(responseJson.last_name).to.eql(last_name);",
											"});",
											"",
											"pm.test(\"Verify that birth_date is correct\", function () {",
											"    const birth_date = \"1953-06-11\";",
											"    pm.expect(responseJson.birth_date).to.eql(birth_date);",
											"});",
											"",
											"pm.test(\"Verify that specialties is correct\", function () {",
											"    const specialties = [",
											"            \"Cow\",",
											"            \"Sheep\",",
											"            \"Pig\"",
											"        ];",
											"    pm.expect(responseJson.specialties).to.eql(specialties);",
											"});",
											"",
											"pm.test(\"Verify that picture is correct\", function () {",
											"    const picture = \"picture29\";",
											"    pm.expect(responseJson.picture).to.eql(picture);",
											"});",
											"",
											"pm.test(\"Verify that status is correct\", function () {",
											"    const status = \"present\";",
											"    pm.expect(responseJson.status).to.eql(status);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{farmers_url}}/farmers/{{farmer_id}}",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"farmers",
										"{{farmer_id}}"
									]
								},
								"description": "Get a farmer by id"
							},
							"response": []
						},
						{
							"name": "Teardown",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"",
											"// Verify teardown success",
											" pm.test(\"Check that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify reset body is correct\", function () {",
											"  pm.expect(responseJson.applied).is.true;",
											"});",
											"",
											"// Reset variables",
											"pm.collectionVariables.unset(\"picture_id\")",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{farmers_url}}/reset",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"reset"
									]
								},
								"description": "Reset farmers to the default values"
							},
							"response": []
						}
					],
					"description": "**Execute** Create a farmer\n\n**Then execute** Get this farmer\n\n**Return** this farmer"
				},
				{
					"name": "Create and list all farmers",
					"item": [
						{
							"name": "Create a farmer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"pm.collectionVariables.set(\"farmer_id\", responseJson.id);",
											"",
											"// Tests",
											" pm.test(\"Check that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that id is correct\", function () {",
											"    const id = \"farmer5\";",
											"    pm.expect(responseJson.id).to.eql(id);",
											"});",
											"",
											"pm.test(\"Verify that first_name is correct\", function () {",
											"    const first_name = \"José\";",
											"    pm.expect(responseJson.first_name).to.eql(first_name);",
											"});",
											"",
											"pm.test(\"Verify that last_name is correct\", function () {",
											"    const last_name = \"Bové\";",
											"    pm.expect(responseJson.last_name).to.eql(last_name);",
											"});",
											"",
											"pm.test(\"Verify that birth_date is correct\", function () {",
											"    const birth_date = \"1953-06-11\";",
											"    pm.expect(responseJson.birth_date).to.eql(birth_date);",
											"});",
											"",
											"pm.test(\"Verify that specialties is correct\", function () {",
											"    const specialties = [",
											"            \"Cow\",",
											"            \"Sheep\",",
											"            \"Pig\"",
											"        ];",
											"    pm.expect(responseJson.specialties).to.eql(specialties);",
											"});",
											"",
											"pm.test(\"Verify that picture is correct\", function () {",
											"    const picture = \"picture29\";",
											"    pm.expect(responseJson.picture).to.eql(picture);",
											"});",
											"",
											"pm.test(\"Verify that status is correct\", function () {",
											"    const status = \"present\";",
											"    pm.expect(responseJson.status).to.eql(status);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\": \"José\",\n\t\"last_name\": \"Bové\",\n\t\"birth_date\": \"1953-06-11\",\n\t\"specialties\": [\n\t\t\"Cow\",\n\t\t\"Sheep\",\n\t\t\"Pig\"\n\t],\n\t\"picture\": \"picture29\",\n\t\"status\": \"present\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{farmers_url}}/farmers",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"farmers"
									]
								},
								"description": "Create a farmer"
							},
							"response": []
						},
						{
							"name": "List all farmers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"const id = pm.collectionVariables.get(\"farmer_id\");",
											"const newFarmer = responseJson.find(farmer => farmer.id === id);",
											"",
											"// Tests",
											" pm.test(\"Check that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Number of entries is 5\", () => {",
											"  pm.expect(responseJson).to.have.lengthOf(5);",
											"});",
											"",
											"responseJson.forEach((entry, index) => {",
											"  pm.test(`Entry ${index + 1} has all required fields and non-empty values`, () => {",
											"    pm.expect(entry).to.have.property(\"id\").and.to.be.a(\"string\").and.to.not.be.empty;",
											"    pm.expect(entry).to.have.property(\"first_name\").and.to.be.a(\"string\").and.to.not.be.empty;",
											"    pm.expect(entry).to.have.property(\"last_name\").and.to.be.a(\"string\").and.to.not.be.empty;",
											"    pm.expect(entry).to.have.property(\"birth_date\").and.to.be.a(\"string\").and.to.not.be.empty;",
											"    pm.expect(entry).to.have.property(\"specialties\").and.to.be.an(\"array\").and.to.not.be.empty;",
											"    pm.expect(entry).to.have.property(\"picture\").and.to.be.a(\"string\").and.to.not.be.empty;",
											"    pm.expect(entry).to.have.property(\"status\").and.to.be.a(\"string\").and.to.not.be.empty;",
											"  });",
											"});",
											"",
											"pm.test(\"Verify that id is correct\", function () {",
											"    const id = \"farmer5\";",
											"    pm.expect(newFarmer.id).to.eql(id);",
											"});",
											"",
											"pm.test(\"Verify that first_name is correct\", function () {",
											"    const first_name = \"José\";",
											"    pm.expect(newFarmer.first_name).to.eql(first_name);",
											"});",
											"",
											"pm.test(\"Verify that last_name is correct\", function () {",
											"    const last_name = \"Bové\";",
											"    pm.expect(newFarmer.last_name).to.eql(last_name);",
											"});",
											"",
											"pm.test(\"Verify that birth_date is correct\", function () {",
											"    const birth_date = \"1953-06-11\";",
											"    pm.expect(newFarmer.birth_date).to.eql(birth_date);",
											"});",
											"",
											"pm.test(\"Verify that specialties is correct\", function () {",
											"    const specialties = [",
											"            \"Cow\",",
											"            \"Sheep\",",
											"            \"Pig\"",
											"        ];",
											"    pm.expect(newFarmer.specialties).to.eql(specialties);",
											"});",
											"",
											"pm.test(\"Verify that picture is correct\", function () {",
											"    const picture = \"picture29\";",
											"    pm.expect(newFarmer.picture).to.eql(picture);",
											"});",
											"",
											"pm.test(\"Verify that status is correct\", function () {",
											"    const status = \"present\";",
											"    pm.expect(newFarmer.status).to.eql(status);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{farmers_url}}/farmers",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"farmers"
									]
								},
								"description": "List all farmers"
							},
							"response": []
						},
						{
							"name": "Teardown",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"",
											"// Verify teardown success",
											" pm.test(\"Check that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify reset body is correct\", function () {",
											"  pm.expect(responseJson.applied).is.true;",
											"});",
											"",
											"// Reset variables",
											"pm.collectionVariables.unset(\"farmer_id\")",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{farmers_url}}/reset",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"reset"
									]
								},
								"description": "Reset farmers to the default values"
							},
							"response": []
						}
					],
					"description": "**Execute** Create a farmer\n\n**Then execute** List all farmers\n\n**Return** default farmers plus this farmer"
				},
				{
					"name": "Create and delete a farmer",
					"item": [
						{
							"name": "Create a farmer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"pm.collectionVariables.set(\"farmer_id\", responseJson.id);",
											"",
											"// Tests",
											" pm.test(\"Check that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that id is correct\", function () {",
											"    const id = \"farmer5\";",
											"    pm.expect(responseJson.id).to.eql(id);",
											"});",
											"",
											"pm.test(\"Verify that first_name is correct\", function () {",
											"    const first_name = \"José\";",
											"    pm.expect(responseJson.first_name).to.eql(first_name);",
											"});",
											"",
											"pm.test(\"Verify that last_name is correct\", function () {",
											"    const last_name = \"Bové\";",
											"    pm.expect(responseJson.last_name).to.eql(last_name);",
											"});",
											"",
											"pm.test(\"Verify that birth_date is correct\", function () {",
											"    const birth_date = \"1953-06-11\";",
											"    pm.expect(responseJson.birth_date).to.eql(birth_date);",
											"});",
											"",
											"pm.test(\"Verify that specialties is correct\", function () {",
											"    const specialties = [",
											"            \"Cow\",",
											"            \"Sheep\",",
											"            \"Pig\"",
											"        ];",
											"    pm.expect(responseJson.specialties).to.eql(specialties);",
											"});",
											"",
											"pm.test(\"Verify that picture is correct\", function () {",
											"    const picture = \"picture29\";",
											"    pm.expect(responseJson.picture).to.eql(picture);",
											"});",
											"",
											"pm.test(\"Verify that status is correct\", function () {",
											"    const status = \"present\";",
											"    pm.expect(responseJson.status).to.eql(status);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\": \"José\",\n\t\"last_name\": \"Bové\",\n\t\"birth_date\": \"1953-06-11\",\n\t\"specialties\": [\n\t\t\"Cow\",\n\t\t\"Sheep\",\n\t\t\"Pig\"\n\t],\n\t\"picture\": \"picture29\",\n\t\"status\": \"present\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{farmers_url}}/farmers",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"farmers"
									]
								},
								"description": "Create a farmer"
							},
							"response": []
						},
						{
							"name": "Delete a farmer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"",
											"// Tests",
											" pm.test(\"Check that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that id is correct\", function () {",
											"    const id = \"farmer5\";",
											"    pm.expect(responseJson.id).to.eql(id);",
											"});",
											"",
											"pm.test(\"Verify that first_name is correct\", function () {",
											"    const first_name = \"José\";",
											"    pm.expect(responseJson.first_name).to.eql(first_name);",
											"});",
											"",
											"pm.test(\"Verify that last_name is correct\", function () {",
											"    const last_name = \"Bové\";",
											"    pm.expect(responseJson.last_name).to.eql(last_name);",
											"});",
											"",
											"pm.test(\"Verify that birth_date is correct\", function () {",
											"    const birth_date = \"1953-06-11\";",
											"    pm.expect(responseJson.birth_date).to.eql(birth_date);",
											"});",
											"",
											"pm.test(\"Verify that specialties is correct\", function () {",
											"    const specialties = [",
											"            \"Cow\",",
											"            \"Sheep\",",
											"            \"Pig\"",
											"        ];",
											"    pm.expect(responseJson.specialties).to.eql(specialties);",
											"});",
											"",
											"pm.test(\"Verify that picture is correct\", function () {",
											"    const picture = \"picture29\";",
											"    pm.expect(responseJson.picture).to.eql(picture);",
											"});",
											"",
											"pm.test(\"Verify that status is correct\", function () {",
											"    const status = \"present\";",
											"    pm.expect(responseJson.status).to.eql(status);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{farmers_url}}/farmers/{{farmer_id}}",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"farmers",
										"{{farmer_id}}"
									]
								},
								"description": "Delete a farmer"
							},
							"response": []
						},
						{
							"name": "Teardown",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"",
											"// Verify teardown success",
											" pm.test(\"Check that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify reset body is correct\", function () {",
											"  pm.expect(responseJson.applied).is.true;",
											"});",
											"",
											"// Reset variables",
											"pm.collectionVariables.unset(\"farmer_id\")",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{farmers_url}}/reset",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"reset"
									]
								},
								"description": "Reset animals to the default values"
							},
							"response": []
						}
					],
					"description": "**Execute** Create a farmer\n\n**Then execute** Delete this farmer\n\n**Then execute** Get this farmer\n\n**Return** an error 404"
				},
				{
					"name": "Two consecutive deletes Copy",
					"item": [
						{
							"name": "Create a farmer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"pm.collectionVariables.set(\"farmer_id\", responseJson.id);",
											"",
											"// Tests",
											" pm.test(\"Check that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that id is correct\", function () {",
											"    const id = \"farmer5\";",
											"    pm.expect(responseJson.id).to.eql(id);",
											"});",
											"",
											"pm.test(\"Verify that first_name is correct\", function () {",
											"    const first_name = \"José\";",
											"    pm.expect(responseJson.first_name).to.eql(first_name);",
											"});",
											"",
											"pm.test(\"Verify that last_name is correct\", function () {",
											"    const last_name = \"Bové\";",
											"    pm.expect(responseJson.last_name).to.eql(last_name);",
											"});",
											"",
											"pm.test(\"Verify that birth_date is correct\", function () {",
											"    const birth_date = \"1953-06-11\";",
											"    pm.expect(responseJson.birth_date).to.eql(birth_date);",
											"});",
											"",
											"pm.test(\"Verify that specialties is correct\", function () {",
											"    const specialties = [",
											"            \"Cow\",",
											"            \"Sheep\",",
											"            \"Pig\"",
											"        ];",
											"    pm.expect(responseJson.specialties).to.eql(specialties);",
											"});",
											"",
											"pm.test(\"Verify that picture is correct\", function () {",
											"    const picture = \"picture29\";",
											"    pm.expect(responseJson.picture).to.eql(picture);",
											"});",
											"",
											"pm.test(\"Verify that status is correct\", function () {",
											"    const status = \"present\";",
											"    pm.expect(responseJson.status).to.eql(status);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"first_name\": \"José\",\n\t\"last_name\": \"Bové\",\n\t\"birth_date\": \"1953-06-11\",\n\t\"specialties\": [\n\t\t\"Cow\",\n\t\t\"Sheep\",\n\t\t\"Pig\"\n\t],\n\t\"picture\": \"picture29\",\n\t\"status\": \"present\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{farmers_url}}/farmers",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"farmers"
									]
								},
								"description": "Create a farmer"
							},
							"response": []
						},
						{
							"name": "Delete a farmer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"",
											"// Tests",
											" pm.test(\"Check that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify that id is correct\", function () {",
											"    const id = \"farmer5\";",
											"    pm.expect(responseJson.id).to.eql(id);",
											"});",
											"",
											"pm.test(\"Verify that first_name is correct\", function () {",
											"    const first_name = \"José\";",
											"    pm.expect(responseJson.first_name).to.eql(first_name);",
											"});",
											"",
											"pm.test(\"Verify that last_name is correct\", function () {",
											"    const last_name = \"Bové\";",
											"    pm.expect(responseJson.last_name).to.eql(last_name);",
											"});",
											"",
											"pm.test(\"Verify that birth_date is correct\", function () {",
											"    const birth_date = \"1953-06-11\";",
											"    pm.expect(responseJson.birth_date).to.eql(birth_date);",
											"});",
											"",
											"pm.test(\"Verify that specialties is correct\", function () {",
											"    const specialties = [",
											"            \"Cow\",",
											"            \"Sheep\",",
											"            \"Pig\"",
											"        ];",
											"    pm.expect(responseJson.specialties).to.eql(specialties);",
											"});",
											"",
											"pm.test(\"Verify that picture is correct\", function () {",
											"    const picture = \"picture29\";",
											"    pm.expect(responseJson.picture).to.eql(picture);",
											"});",
											"",
											"pm.test(\"Verify that status is correct\", function () {",
											"    const status = \"present\";",
											"    pm.expect(responseJson.status).to.eql(status);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{farmers_url}}/farmers/{{farmer_id}}",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"farmers",
										"{{farmer_id}}"
									]
								},
								"description": "Delete a farmer"
							},
							"response": []
						},
						{
							"name": "Delete a farmer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"",
											"// Tests",
											" pm.test(\"Check that status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Verify the content of the response\", function () {",
											"\t\tconst errorMessage = \"Farmer not found\";",
											"\t\tpm.expect(responseJson.error).to.eql(errorMessage);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{farmers_url}}/farmers/{{farmer_id}}",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"farmers",
										"{{farmer_id}}"
									]
								},
								"description": "Delete a farmer"
							},
							"response": []
						},
						{
							"name": "Teardown",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Init variables",
											"const responseJson = pm.response.json();",
											"",
											"// Verify teardown success",
											" pm.test(\"Check that status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verify reset body is correct\", function () {",
											"  pm.expect(responseJson.applied).is.true;",
											"});",
											"",
											"// Reset variables",
											"pm.collectionVariables.unset(\"farmer_id\")",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{farmers_url}}/reset",
									"host": [
										"{{farmers_url}}"
									],
									"path": [
										"reset"
									]
								},
								"description": "Reset animals to the default values"
							},
							"response": []
						}
					],
					"description": "**Execute** Create a picture\n\n**Then execute** Delete this picture\n\n**Then execute** Delete this picture\n\n**Return** an error 404"
				}
			],
			"description": "Integration tests of the service \"Farmers\"."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "https://postman-integration-testing.glitch.me/"
		}
	]
}